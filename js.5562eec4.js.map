{"version":3,"sources":["js/fetchCountries.js","js/index.js"],"names":["fetchCountries","searchQuery","fetch","then","response","json","data","refs","inputContry","document","querySelector","outputCountry","onInput","value","markupOutput","markup","innerHTML","insertAdjacentHTML","errorMessage","message","myStack","Stack","dir1","firstpos1","push","modal","error","text","delay","closer","stack","title","icon","width","sticker","addClass","length","countryList","countryForm","addEventListener","debounce"],"mappings":";AAIG,aAJY,SAASA,EAAeC,GAC5BC,OAAAA,2CAA2CD,KAC/CE,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQA,GACjB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;AC6DF,aA9DD,IAAA,EAAA,EAAA,QAAA,qBA8DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApDD,MAAMC,EAAO,CACTC,YAAaC,SAASC,cAAc,UACpCC,cAAeF,SAASC,cAAc,iBAK1C,SAASE,IACH,IAACL,EAAKC,YAAYK,MAAO,OAAOC,EAAa,GAkBxCA,SAAAA,EAAaC,GACpBR,EAAKI,cAAcK,UAAY,GAC3BD,GAAQR,EAAKI,cAAcM,mBAAmB,aAAcF,GAIzDG,SAAAA,EAAaC,GACdC,MAAAA,EAAU,IAAIC,MAAM,CACxBC,KAAM,QACNC,UAAW,GACXC,KAAM,MACNC,OAAO,IAGFC,OAAAA,MAAM,CACXC,KAAMR,EACNS,MAAO,IACPC,QAAQ,EACRC,MAAOV,EACPW,MAAO,SACPC,MAAM,EACNC,MAAO,QACPC,SAAS,EACTC,SAAU,eAvCD5B,EAAAA,EAAAA,SAAAA,EAAKC,YAAYK,OAAOV,KAAKG,IACpC,IAACA,EAAK8B,OAEDlB,OADPJ,EAAa,GACNI,EAAa,kDAGlBZ,EAAK8B,OAAS,GAChBlB,EAAa,8DACJZ,EAAK8B,OAAS,GAAK9B,EAAK8B,QAAU,GAC3CtB,EAAauB,YAAY/B,IAEzBQ,EAAawB,YAAYhC,EAAK,OAhBpCC,EAAKC,YAAY+B,iBAAiB,QAASC,SAAS5B,EAAS","file":"js.5562eec4.js","sourceRoot":"../src","sourcesContent":["export default function fetchCountries(searchQuery) {\n    return fetch(`https://restcountries.com/v2/name/${searchQuery}`)\n      .then(response => response.json())\n      .then(data => data);\n  }","// import './css/common.css';\n// import countryForm from './templates/form.hbs';\n// import countryList from './templates/list.hbs';\nimport fetchCountries from './fetchCountries';\n// import '@pnotify/core/dist/BrightTheme.css';\n\n// import { debounce } from 'lodash';\n// import { error, Stack } from '@pnotify/core';\n\n\n\n// fetch('https://restcountries.com/v2/all?fields=flag,name,capital,languages,population').then(r => r.json()).then(console.log)\n\nconst refs = {\n    inputContry: document.querySelector('#input'),\n    outputCountry: document.querySelector('.box-country'),\n  }\n\nrefs.inputContry.addEventListener('input', debounce(onInput, 500));\n\nfunction onInput() {\n  if (!refs.inputContry.value) return markupOutput(0);\n\nfetchCountries(refs.inputContry.value).then(data => {\n    if (!data.length) {\n      markupOutput(0);\n      return errorMessage('There is no such country. Refine your request.');\n    }\n\n    if (data.length > 10) {\n      errorMessage('Too many matches found. Please enter amore specific query!');\n    } else if (data.length > 2 && data.length <= 10) {\n      markupOutput(countryList(data));\n    } else {\n      markupOutput(countryForm(data[0]));\n    }\n    return;\n  });\n\n  function markupOutput(markup) {\n    refs.outputCountry.innerHTML = '';\n    if (markup) refs.outputCountry.insertAdjacentHTML('afterbegin', markup);\n    return;\n  }\n\n  function errorMessage(message) {\n    const myStack = new Stack({\n      dir1: 'right',\n      firstpos1: 25,\n      push: 'top',\n      modal: true,\n    });\n\n    return error({\n      text: message,\n      delay: 3000,\n      closer: false,\n      stack: myStack,\n      title: 'ERROR!',\n      icon: false,\n      width: '250px',\n      sticker: false,\n      addClass: 'error-box',\n    });\n  }\n}\n\n\n\n"]}